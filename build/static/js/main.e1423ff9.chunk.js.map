{"version":3,"sources":["components/code-block.tsx","axios/index.ts","views/home/index.tsx","components/markdown/edit-markdown.tsx","views/edit/index.tsx","views/newBlogs/index.tsx","router/index.tsx","views/details/index.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["CodeBlock","state","codeEl","el","_this2","this","setState","highlightCode","hljs","_this3","react_default","a","createElement","ref","setRef","className","concat","props","language","value","PureComponent","GetAxios","instance","Axios","create","baseURL","interceptors","request","use","config","Object","objectSpread","params","_","Date","response","data","Promise","resolve","reject","error","console","log","success","msg","getAxiosInstance","then","__data","message","get","url","arguments","length","undefined","assign","method","delete","head","options","post","put","patch","Ajax","IconText","icon","type","style","marginRight","text","Component","Home","listData","JSON","parse","localStorage","getItem","getList","res","es_list","itemLayout","size","pagination","onChange","page","pageSize","dataSource","renderItem","item","Item","key","title","actions","home_IconText","extra","width","alt","src","Meta","avatar","href","id","description","maxHeight","overflow","react_markdown_default","source","content","skipHtml","escapeHtml","renderers","code","EditMarkdown","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","details","inputRef","newCodeMirror","React","createRef","values","CodeMirror","current","lineNumbers","lineWrapping","mode","extraKeys","Ctrl","theme","tabSize","scrollbarStyle","showCursorWhenSelecting","cursorHeight","on","getValue","height","autoFocus","e","target","Edit","markdownSrc","row","gutter","col","span","edit_markdown","handleOnChange","NewBlogs","form","setFieldsValue","preventDefault","validateFields","err","fieldsValue","list","push","setItem","stringify","label","children","getFieldDecorator","formItemLayout","labelCol","wrapperCol","es_form","layout","onSubmit","handleOnSubmit","rules","required","input","margin","placeholder","cascader","getClassify","selectedOptions","showSearch","filter","inputValue","path","some","option","toLowerCase","indexOf","TextArea","autosize","minRows","maxRows","display","es_button","htmlType","routeData","name","exact","component","hideMenu","Form","getData","match","App","Header","backgroundColor","menu","defaultSelectedKeys","lineHeight","Link","to","Content","padding","breadcrumb","background","minHeight","Footer","textAlign","Boolean","window","location","hostname","ReactDOM","render","BrowserRouter","src_App_0","map","index","Switch","Route","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.e1423ff9.chunk.js","sourcesContent":["import React, {PureComponent} from 'react'\r\nimport * as hljs from 'highlight.js'\r\n\r\nimport 'highlight.js/styles/dark.css'\r\n\r\ninterface IProps {\r\n    value: string;\r\n    language: string;\r\n}\r\n\r\ninterface IState {\r\n    codeEl: string;\r\n}\r\n\r\nclass CodeBlock extends PureComponent<IProps, IState> {\r\n\r\n    state = {\r\n        codeEl: ''\r\n    }\r\n\r\n    setRef(el: any) {\r\n        this.setState({\r\n            codeEl: el\r\n        }, () => {\r\n            this.highlightCode()\r\n        })\r\n    }\r\n\r\n    highlightCode() {\r\n        hljs.highlightBlock(this.state.codeEl)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <pre>\r\n        <code ref={el => this.setRef(el)} className={`language-${this.props.language}`}>\r\n          {this.props.value}\r\n        </code>\r\n      </pre>\r\n        )\r\n    }\r\n}\r\n\r\nexport default CodeBlock","import Axios, {AxiosInstance, AxiosRequestConfig} from 'axios'\r\n\r\n// 接口前缀\r\nconst BASE_URL = '/'\r\n\r\n// axios 配置实例\r\nconst getAxiosInstance = (): AxiosInstance => {\r\n    const instance: AxiosInstance = Axios.create({\r\n        baseURL: `${BASE_URL}`\r\n    })\r\n    instance.interceptors.request.use((config) => ({\r\n        ...config,\r\n        params: {\r\n            // 此处注意，你的`params`应该是个对象，不能是其他数据类型\r\n            ...(config.params || {}),\r\n            _: +new Date()\r\n        }\r\n    }))\r\n\r\n    instance.interceptors.response.use(\r\n        (response) => {\r\n            if (response && response.data) {\r\n                return Promise.resolve(response)\r\n            } else {\r\n                return Promise.reject('response 不存在')\r\n            }\r\n        },\r\n        (error) => {\r\n            console.log('-- error --')\r\n            console.log(error)\r\n            console.log('-- error --')\r\n            return Promise.reject({\r\n                success: false,\r\n                msg: error\r\n            })\r\n        }\r\n    )\r\n    return instance\r\n}\r\n\r\n// 基本返回数据格式\r\ninterface BaseResponse<T> {\r\n    success: boolean\r\n    data: T\r\n    message?: string\r\n}\r\n\r\n// 基本 Ajax 格式\r\ninterface BaseAjax {\r\n    get: <T>(url: string, config?: object) => Promise<BaseResponse<T>>\r\n    delete: <T>(url: string, config?: object) => Promise<BaseResponse<T>>\r\n    head: <T>(url: string, config?: object) => Promise<BaseResponse<T>>\r\n    options: <T>(url: string, config?: object) => Promise<BaseResponse<T>>\r\n    post: <T>(url: string, data?: object, config?: object) => Promise<BaseResponse<T>>\r\n    put: <T>(url: string, data?: object, config?: object) => Promise<BaseResponse<T>>\r\n    patch: <T>(url: string, data?: object, config?: object) => Promise<BaseResponse<T>>\r\n}\r\n\r\n// 获取一个 Ajax 实例\r\nconst GetAxios = () => {\r\n    const instance: AxiosInstance = getAxiosInstance()\r\n    const request = <T>(config: AxiosRequestConfig): Promise<BaseResponse<T>> => {\r\n        return new Promise((resolve, reject) => {\r\n            instance.request<BaseResponse<T>>(config).then((data) => {\r\n                const __data = data.data\r\n                if (__data.success) {\r\n                    resolve(__data)\r\n                } else {\r\n                    console.log(__data.message)\r\n                    reject(__data)\r\n                }\r\n            })\r\n        })\r\n    }\r\n\r\n    // Ajax 实体\r\n    const Ajax: BaseAjax = {\r\n        get: function <T>(url: string, config: object = {}): Promise<BaseResponse<T>> {\r\n            return request<T>(\r\n                Object.assign({}, config, {\r\n                    method: 'GET',\r\n                    url: url\r\n                })\r\n            )\r\n        },\r\n        delete: function <T>(url: string, config: object = {}): Promise<BaseResponse<T>> {\r\n            return request<T>(\r\n                Object.assign({}, config, {\r\n                    method: 'DELETE',\r\n                    url: url\r\n                })\r\n            )\r\n        },\r\n        head: function <T>(url: string, config: object = {}): Promise<BaseResponse<T>> {\r\n            return request<T>(\r\n                Object.assign({}, config, {\r\n                    method: 'HEAD',\r\n                    url: url\r\n                })\r\n            )\r\n        },\r\n        options: function <T>(url: string, config: object = {}): Promise<BaseResponse<T>> {\r\n            return request<T>(\r\n                Object.assign({}, config, {\r\n                    method: 'OPTIONS',\r\n                    url: url\r\n                })\r\n            )\r\n        },\r\n        post: function <T>(url: string, data: object = {}, config: object = {}): Promise<BaseResponse<T>> {\r\n            return request<T>(\r\n                Object.assign({}, config, {\r\n                    method: 'POST',\r\n                    url: url,\r\n                    data: data\r\n                })\r\n            )\r\n        },\r\n        put: function <T>(url: string, data: object = {}, config: object = {}): Promise<BaseResponse<T>> {\r\n            return request<T>(\r\n                Object.assign({}, config, {\r\n                    method: 'PUT',\r\n                    url: url,\r\n                    data: data\r\n                })\r\n            )\r\n        },\r\n        patch: function <T>(url: string, data: object = {}, config: object = {}): Promise<BaseResponse<T>> {\r\n            return request<T>(\r\n                Object.assign({}, config, {\r\n                    method: 'PATCH',\r\n                    url: url,\r\n                    data: data\r\n                })\r\n            )\r\n        }\r\n    }\r\n\r\n    return Ajax\r\n}\r\n\r\nexport const Ajax: BaseAjax = GetAxios()\r\n\r\nexport default GetAxios","import React, {Component} from 'react'\r\nimport {Avatar, Icon, List} from \"antd\"\r\nimport CodeBlock from \"@Components/code-block\"\r\nimport ReactMarkdown from \"react-markdown\"\r\nimport {Ajax} from \"@/axios\"\r\n\r\n\r\ninterface IProps {\r\n    type: string,\r\n    text: string\r\n}\r\n\r\nclass IconText extends Component<IProps> {\r\n    render() {\r\n        return (\r\n            <span>\r\n                <Icon type={this.props.type} style={{marginRight: 8}} />\r\n                {this.props.text}\r\n            </span>\r\n        )\r\n    }\r\n}\r\n\r\nclass Home extends Component {\r\n    state = {\r\n        listData: []\r\n    }\r\n\r\n    componentDidMount() {\r\n        let list = JSON.parse(localStorage.getItem('listData') || '[]')\r\n        // for (let i = 0; i < 23; i++) {\r\n        //     list.push({\r\n        //         href: '/edit/' + i,\r\n        //         title: `ant design part ${i}`,\r\n        //         avatar: 'https://zos.alipayobjects.com/rmsportal/ODTLcjxAfvqbxHnVXCYX.png',\r\n        //         description: 'Ant Design, a design language for background applications, is refined by Ant UED Team.',\r\n        //         content: 'We supply a series of design principles, practical patterns and high quality design resources (Sketch and Axure), to help people create their product prototypes beautifully and efficiently.',\r\n        //     });\r\n        // }\r\n        this.getList()\r\n    }\r\n\r\n    getList() {\r\n        Ajax.post(`/api/blogs/blogsList`).then((res: any) => {\r\n            this.setState({\r\n                listData: res.data\r\n            }, () => {\r\n                console.log(222, this.state.listData)\r\n            })\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <List\r\n                itemLayout=\"vertical\"\r\n                size=\"large\"\r\n                pagination={{\r\n                    onChange: (page) => {\r\n                        console.log(page)\r\n                    },\r\n                    pageSize: 3,\r\n                }}\r\n                dataSource={this.state.listData}\r\n                renderItem={(item: any) => (\r\n                    <List.Item\r\n                        key={item.title}\r\n                        actions={\r\n                            [\r\n                                <IconText type=\"star-o\" text=\"156\" />,\r\n                                <IconText type=\"like-o\" text=\"156\" />,\r\n                                <IconText type=\"message\" text=\"2\" />\r\n                            ]\r\n                        }\r\n                        extra={\r\n                            <img\r\n                                width={272}\r\n                                alt=\"logo\"\r\n                                src=\"https://gw.alipayobjects.com/zos/rmsportal/mqaQswcyDLcXyDKnZfES.png\"\r\n                            />}\r\n                    >\r\n                        <List.Item.Meta\r\n                            avatar={\r\n                                <Avatar src={item.avatar} />\r\n                            }\r\n                            title={\r\n                                <a href={`/details/${item.id}`}>\r\n                                    {item.title}\r\n                                </a>\r\n                            }\r\n                            description={item.description}\r\n                        />\r\n                        <div style={{maxHeight: '50px', overflow: 'hidden'}}>\r\n                            <ReactMarkdown\r\n                                className={\"result\"}\r\n                                source={item.content}\r\n                                skipHtml={false}\r\n                                escapeHtml={false}\r\n                                renderers={{code: CodeBlock}}\r\n                            />\r\n                        </div>\r\n                    </List.Item>\r\n                )}\r\n            />\r\n        )\r\n    }\r\n}\r\n\r\nexport default Home","import React, {PureComponent} from 'react'\r\nimport * as CodeMirror from \"codemirror\"\r\nimport 'codemirror/keymap/sublime'\r\nimport 'codemirror/mode/markdown/markdown'\r\nimport 'codemirror/lib/codemirror.css'\r\nimport 'codemirror/theme/mdn-like.css'\r\nimport './style.scss'\r\n\r\ninterface IProps {\r\n    values: string;\r\n    onChange: any;\r\n}\r\n\r\ninterface IState {\r\n    details: string;\r\n}\r\n\r\nclass EditMarkdown extends PureComponent<IProps, IState> {\r\n    state = {\r\n        details: ``\r\n    }\r\n    inputRef: any\r\n    newCodeMirror: any\r\n\r\n    constructor(props: any) {\r\n        super(props)\r\n        this.inputRef = React.createRef()\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setState({\r\n            details: this.props.values\r\n        })\r\n        this.newCodeMirror = CodeMirror.fromTextArea(this.inputRef.current, {\r\n            value: this.state.details,\r\n            lineNumbers: true,\r\n            lineWrapping: true,\r\n            mode: 'markdown', // 定义mode\r\n            extraKeys: {\"Ctrl\": \"autocomplete\"}, // 自动提示配置\r\n            theme: 'mdn-like',\r\n            tabSize: 4,\r\n            scrollbarStyle: 'null',\r\n            showCursorWhenSelecting: true,\r\n            cursorHeight: 0.85\r\n        })\r\n        this.newCodeMirror.on('inputRead', () => {\r\n            this.setState({\r\n                details: this.newCodeMirror.getValue()\r\n            }, () => {\r\n                this.props.onChange(this.newCodeMirror.getValue())\r\n            })\r\n        })\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div\r\n                onChange={this.props.onChange}\r\n                style={{height: '100%'}}\r\n            >\r\n                <textarea\r\n                    value={this.state.details}\r\n                    ref={this.inputRef}\r\n                    autoFocus={true}\r\n                    onChange={(e: any) => {\r\n                        this.setState({\r\n                            details: e.target.value\r\n                        })\r\n                    }}\r\n                />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default EditMarkdown","import React, {Component} from 'react'\r\nimport ReactMarkdown from 'react-markdown'\r\nimport {Col, Row} from \"antd\"\r\nimport CodeBlock from '@Components/code-block'\r\nimport EditMarkdown from '@Components/markdown/edit-markdown'\r\nimport './style.scss'\r\n\r\n\r\n\r\n\r\ninterface IState {\r\n    markdownSrc: string;\r\n}\r\n\r\nclass Edit extends Component<IState> {\r\n    state = {\r\n        markdownSrc: ``\r\n    }\r\n\r\n    handleOnChange(values: any) {\r\n        this.setState({\r\n            markdownSrc: values\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Row gutter={20}>\r\n                <Col span={14}>\r\n                    <EditMarkdown\r\n                        values={this.state.markdownSrc}\r\n                        onChange={(value: any) => this.handleOnChange(value)}\r\n                    />\r\n                </Col>\r\n                <Col span={10}>\r\n                    <ReactMarkdown\r\n                        className={\"result\"}\r\n                        source={this.state.markdownSrc}\r\n                        skipHtml={false}\r\n                        escapeHtml={false}\r\n                        renderers={{code: CodeBlock}}\r\n                    />\r\n                </Col>\r\n            </Row>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Edit","import React, {Component} from 'react'\r\nimport ReactMarkdown from 'react-markdown'\r\nimport {Button, Cascader, Col, Form, Input, Row, Select} from \"antd\"\r\nimport {FormComponentProps} from 'antd/lib/form'\r\nimport CodeBlock from '@Components/code-block'\r\nimport EditMarkdown from '@Components/markdown/edit-markdown'\r\nimport {Ajax} from '@/axios/index.ts'\r\nimport './style.scss'\r\n\r\n\r\ninterface IProps extends FormComponentProps {\r\n    content: string\r\n}\r\n\r\nclass NewBlogs extends Component<IProps> {\r\n    state = {\r\n        content: ``,\r\n        avatar: 'https://zos.alipayobjects.com/rmsportal/ODTLcjxAfvqbxHnVXCYX.png'\r\n    }\r\n\r\n    handleOnChange(values: any) {\r\n        this.setState({\r\n            content: values\r\n        })\r\n        this.props.form.setFieldsValue({\r\n            content: values\r\n        })\r\n    }\r\n\r\n    handleOnSubmit(e: any) {\r\n\r\n        e.preventDefault()\r\n        this.props.form.validateFields((err: any, fieldsValue: any) => {\r\n            if (err) {\r\n                return\r\n            }\r\n            let list = JSON.parse(localStorage.getItem('listData') || '[]')\r\n            list.push({...this.state, ...fieldsValue})\r\n            localStorage.setItem('listData', JSON.stringify(list))\r\n            Ajax.post('/api/blogs/createBlogs', {\r\n                data: {\r\n                    ...this.state,\r\n                    ...fieldsValue\r\n                }\r\n            }).then((res: any) => {\r\n                console.log(res)\r\n            })\r\n        })\r\n    }\r\n\r\n    getClassify() {\r\n        return [\r\n            {\r\n                value: 'qianduan',\r\n                label: '前端',\r\n                children: [\r\n                    {\r\n                        value: 'kuangjia',\r\n                        label: '框架',\r\n                        children: [\r\n                            {\r\n                                value: 'react',\r\n                                label: 'react',\r\n                            },\r\n                            {\r\n                                value: 'vue',\r\n                                label: 'vue',\r\n                            }\r\n                        ],\r\n                    }\r\n                ],\r\n            },\r\n            {\r\n                value: 'houduan',\r\n                label: '后端',\r\n                children: [\r\n                    {\r\n                        value: 'kuangjia',\r\n                        label: '框架',\r\n                        children: [\r\n                            {\r\n                                value: 'php',\r\n                                label: 'php',\r\n                            },\r\n                            {\r\n                                value: 'python',\r\n                                label: 'python'\r\n                            }\r\n                        ],\r\n                    }\r\n                ],\r\n            }\r\n        ]\r\n    }\r\n\r\n    render() {\r\n\r\n        const {getFieldDecorator} = this.props.form\r\n        const formItemLayout = {\r\n            labelCol: {\r\n                span: 3\r\n            },\r\n            wrapperCol: {\r\n                span: 21\r\n            },\r\n        }\r\n\r\n        const cascaderOnChange = (value: any, selectedOptions: any) => {\r\n            console.log(value, selectedOptions)\r\n        }\r\n        const filter = (inputValue: any, path: any): boolean => {\r\n            return (path.some((option: any) => (option.label).toLowerCase().indexOf(inputValue.toLowerCase()) > -1))\r\n        }\r\n        return (\r\n            <div>\r\n                <Form layout={'horizontal'} onSubmit={(e: any) => this.handleOnSubmit(e)}>\r\n                    <Form.Item\r\n                        label={'文章名称'}\r\n                        {...formItemLayout}\r\n                    >\r\n                        {getFieldDecorator('title', {\r\n                            rules: [{\r\n                                required: true, message: '请输入文章名称'\r\n                            }]\r\n                        })(\r\n                            <Input style={{width: '260px', margin: '0 5px'}} placeholder=\"\" />\r\n                        )}\r\n                    </Form.Item>\r\n                    <Form.Item\r\n                        label={'分类'}\r\n                        {...formItemLayout}\r\n                    >\r\n                        {getFieldDecorator('cascaderName', {\r\n                            rules: [{\r\n                                required: true, message: '请输入或选择类别'\r\n                            }]\r\n                        })(\r\n                            <Cascader\r\n                                options={this.getClassify()}\r\n                                onChange={cascaderOnChange}\r\n                                placeholder=\"请输入或选择类别\"\r\n                                showSearch={{filter}}\r\n                                style={{width: '260px'}}\r\n                            />\r\n                        )}\r\n                    </Form.Item>\r\n                    <Form.Item\r\n                        label={'描述'}\r\n                        {...formItemLayout}\r\n                    >\r\n                        {getFieldDecorator('description', {\r\n                            rules: []\r\n                        })(\r\n                            <Input.TextArea\r\n                                autosize={{minRows: 3, maxRows: 6}}\r\n                                style={{width: '260px'}}\r\n                            />\r\n                        )}\r\n                    </Form.Item>\r\n                    <Form.Item label={'markDown编写'}>\r\n                        {getFieldDecorator('content', {\r\n                            rules: [{\r\n                                required: true, message: '请输入markdown'\r\n                            }]\r\n                        })(\r\n                            <Input style={{display: 'none'}} />\r\n                        )}\r\n                        <Row gutter={20} type={'flex'}>\r\n                            <Col span={14}>\r\n                                <EditMarkdown\r\n                                    values={this.state.content}\r\n                                    onChange={(value: any) => this.handleOnChange(value)}\r\n                                />\r\n                            </Col>\r\n                            <Col span={10}>\r\n                                <ReactMarkdown\r\n                                    className={\"result\"}\r\n                                    source={this.state.content}\r\n                                    skipHtml={false}\r\n                                    escapeHtml={false}\r\n                                    renderers={{code: CodeBlock}}\r\n                                />\r\n                            </Col>\r\n                        </Row>\r\n                    </Form.Item>\r\n                    <Form.Item className=\"Item\">\r\n                        <Button type={'primary'} htmlType={'submit'}>Submit</Button>\r\n                    </Form.Item>\r\n                </Form>\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Form.create()(NewBlogs)","import React, {Component} from 'react'\r\nimport {Route, Switch} from 'react-router-dom'\r\n\r\nimport Home from '@Views/home'\r\nimport Edit from '@Views/edit'\r\nimport NewBlogs from '@Views/newBlogs'\r\nimport Details from '@Views/details'\r\n\r\ninterface routeChild {\r\n    name: string,\r\n    path: string,\r\n    exact: boolean,\r\n    component: any,\r\n    hideMenu: boolean\r\n}\r\n\r\ninterface routeItem {\r\n    name: string,\r\n    path: string,\r\n    exact: boolean,\r\n    component: any,\r\n    routes?: routeChild[],\r\n    hideMenu: boolean\r\n}\r\n\r\nexport const routeData: routeItem[] = [\r\n    {\r\n        name: 'App',\r\n        path: '/',\r\n        exact: true,\r\n        component: Home,\r\n        hideMenu: false\r\n    },\r\n    {\r\n        name: 'edit',\r\n        path: '/edit/:id',\r\n        exact: true,\r\n        component: Edit,\r\n        hideMenu: false\r\n    },\r\n    {\r\n        name: 'newBlogs',\r\n        path: '/newBlogs',\r\n        exact: true,\r\n        component: NewBlogs,\r\n        hideMenu: false\r\n    },\r\n    {\r\n        name: 'Details',\r\n        path: '/details/:id',\r\n        exact: true,\r\n        component: Details,\r\n        hideMenu: false\r\n    },\r\n\r\n]\r\n\r\nexport const router = () => (\r\n    routeData.map((item, index) => (\r\n        <Switch key={index}>\r\n            <Route exact={item.exact} path={item.path} component={item.component} />\r\n        </Switch>\r\n    ))\r\n\r\n)","import React, {Component} from 'react'\r\nimport {Ajax} from \"@/axios\"\r\nimport CodeBlock from \"@Components/code-block\"\r\nimport ReactMarkdown from \"react-markdown\"\r\n\r\n\r\ninterface IProps {\r\n    match?: any,\r\n    id: number;\r\n}\r\n\r\n\r\ninterface IState {\r\n    details: any;\r\n}\r\n\r\nclass Details extends Component<IProps, IState> {\r\n\r\n\r\n    state = {\r\n        details: {\r\n            content: ''\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        console.log(this.props)\r\n        this.getData()\r\n    }\r\n\r\n    getData() {\r\n        console.log(111)\r\n        Ajax.post(`/api/blogs/blogsDetail`, {\r\n            data: {\r\n                id: +this.props.match.params.id\r\n            }\r\n        }).then((res: any) => {\r\n            this.setState({\r\n                details: res.data\r\n            })\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            this.state.details\r\n                ? <ReactMarkdown\r\n                    className={\"result\"}\r\n                    source={this.state.details.content}\r\n                    skipHtml={false}\r\n                    escapeHtml={false}\r\n                    renderers={{code: CodeBlock}}\r\n                /> : <div>details</div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Details","import React, {Component} from 'react'\nimport {Breadcrumb, Layout, Menu} from 'antd'\nimport './App.css'\nimport {Link} from \"react-router-dom\"\n\nclass App extends Component {\n\n    componentDidMount() {\n        console.log(this.props)\n    }\n    render() {\n        return (\n            <Layout className=\"layout\">\n                <Layout.Header style={{backgroundColor: '#fff'}}>\n                    <div className=\"logo\" />\n                    <Menu\n                        mode=\"horizontal\"\n                        defaultSelectedKeys={['1']}\n                        style={{lineHeight: '64px'}}\n                    >\n                        <Menu.Item key=\"1\">\n                            <Link to={'/'}>文章列表</Link>\n                        </Menu.Item>\n                        {/* <Menu.Item key=\"2\"> */}\n                            {/* <Link to={'/newBlogs'}>新增</Link> */}\n                        {/* </Menu.Item> */}\n                        {/* <Menu.Item key=\"3\"> */}\n                            {/* <Link to={'/edit'}>编辑</Link> */}\n                        {/* </Menu.Item> */}\n                        {/* <Menu.Item key=\"4\"> */}\n                            {/* <Link to={'/details'}>详情</Link> */}\n                        {/* </Menu.Item> */}\n                    </Menu>\n                </Layout.Header>\n                <Layout.Content style={{padding: '0 50px'}}>\n                    <Breadcrumb style={{margin: '16px 0'}}>\n                        <Breadcrumb.Item>Home</Breadcrumb.Item>\n                        <Breadcrumb.Item>List</Breadcrumb.Item>\n                        <Breadcrumb.Item>App</Breadcrumb.Item>\n                    </Breadcrumb>\n                    <div style={{background: '#fff', padding: 24, minHeight: 280}}>\n                        {this.props.children}\n                    </div>\n                </Layout.Content>\n                <Layout.Footer style={{textAlign: 'center'}}>\n                    Ant Design ©2018 Created by Ant UED\n                </Layout.Footer>\n            </Layout>\n        )\n    }\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport {BrowserRouter as Router} from 'react-router-dom'\nimport {router} from './router'\nimport './index.css'\nimport 'antd/dist/antd.min.css'\nimport App from './App'\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(\n    <Router>\n        <App>\n            {router()}\n        </App>\n    </Router>\n    , document.getElementById('root'))\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}